%YAML1.2
---

# Licensed under the Apache License, Version 2.0 (the “License”); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an “AS IS” BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

variables:
  componetnFunctions: |
    (this)
    \s*(\.)\s*
    ((?> forceUpdate
      | setState
    ))\b

  propTypeFunctions: |
    (?:
      (React)
      \s*(\.)\s*
    )?
    (PropTypes)
    \s*(\.)\s*
    ((?> arrayOf
      | instanceOf
      | oneOf(?:Type)?
      | shape
    ))\b

  reactFunctions: |
    (React)
    \s*(\.)\s*
    ((?> createElement
      | createFactory
      | cloneElement
      | isValidElement
    ))\b

  reactDomFunctions: |
    (ReactD[oO][mM])
    \s*(\.)\s*
    ((?> findDOMNode
      | render(?:ToS(?>taticMarkup|tring))?
      | unmountComponentAtNode
    ))\b

contexts:
  main:
    - include: proptype-functions
    - include: proptypes
    - include: component-functions
    - include: react-functions
    - include: react-dom-functions

  arguments:
    - include: ~/js/expression

  component-functions:
    # Function call.
    - match: (?x){{reactFunctions}}(?=\s*\()
      captures:
        1: variable.language.this.js.fjsx15
        2: punctuation.accessor.js.fjsx15
        3: support.function.fjsx15
      set: [
        function-call-meta-scope,
        arguments
      ]
    # Function reference.
    - match: (?x){{reactFunctions}}
      captures:
        1: variable.language.this.js.fjsx15
        2: punctuation.accessor.js.fjsx15
        3: support.function.fjsx15
      pop: true

  function-call-meta-scope:
    - meta_scope: meta.function-call.js.fjsx15
    - include: pop-now

  optional-property-type-and-value:
    - include: ~/js/class/property#optional-type-and-value

  pop-now:
    - match: ""
      pop: true

  proptypes:
    # Normal.
    - match: |
        (?x)
        (?:
          (React)
          \s*(\.)\s*
        )?
        (PropTypes)
        \s*(\.)\s*
        ((?> any
          | array
          | bool
          | element
          | func
          | node
          | number
          | object
          | symbol
          | string
        ))\b
        (?:
          \s*(\.)\s*
          (isRequired\b)
        )?
      captures:
        1: support.type.object.fjsx15
        2: punctuation.accessor.js.fjsx15
        3: support.type.object.fjsx15
        4: punctuation.accessor.js.fjsx15
        5: support.type.object.fjsx15
        6: punctuation.accessor.js.fjsx15
        7: support.type.object.fjsx15
      pop: true
    # “isRequired” after function call.
    - match: |
        (?x)
        (?<=\))
        \s*(\.)\s*
        (isRequired\b)
      captures:
        1: punctuation.accessor.js.fjsx15
        2: support.type.object.fjsx15
      pop: true

  proptype-functions:
    # Function call.
    - match: (?x){{propTypeFunctions}}(?=\s*\()
      captures:
        1: support.type.object.fjsx15
        2: punctuation.accessor.js.fjsx15
        3: support.type.object.fjsx15
        4: punctuation.accessor.js.fjsx15
        5: support.function.fjsx15
      set: [
        function-call-meta-scope,
        arguments
      ]
    # Function reference.
    - match: (?x){{propTypeFunctions}}
      captures:
        1: support.type.object.fjsx15
        2: punctuation.accessor.js.fjsx15
        3: support.type.object.fjsx15
        4: punctuation.accessor.js.fjsx15
        5: support.function.fjsx15
      pop: true

  react-dom-functions:
    # Function call.
    - match: (?x){{reactDomFunctions}}(?=\s*\()
      captures:
        1: support.type.object.fjsx15
        2: punctuation.accessor.js.fjsx15
        3: support.function.fjsx15
      set: [
        function-call-meta-scope,
        arguments
      ]
    # Function reference.
    - match: (?x){{reactDomFunctions}}
      captures:
        1: support.type.object.fjsx15
        2: punctuation.accessor.js.fjsx15
        3: support.function.fjsx15
      pop: true

  react-functions:
    # Function call.
    - match: (?x){{reactFunctions}}(?=\s*\()
      captures:
        1: support.type.object.fjsx15
        2: punctuation.accessor.js.fjsx15
        3: support.function.fjsx15
      set: [
        function-call-meta-scope,
        arguments
      ]
    # Function reference.
    - match: (?x){{reactFunctions}}
      captures:
        1: support.type.object.fjsx15
        2: punctuation.accessor.js.fjsx15
        3: support.function.fjsx15
      pop: true
