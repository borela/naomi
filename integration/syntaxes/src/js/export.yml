%YAML1.2
---

# Licensed under the Apache License, Version 2.0 (the “License”); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an “AS IS” BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

variables:
  commonIdentifier: |
    [$_[:alpha:]]
    [$_[:alnum:]]*

contexts:
  main:
    - match: export\b
      scope: keyword.control.import-export.export.js.fjsx15
      set: possible-statement-or-expression

  alias:
    - match: as\b
      scope: keyword.control.import-export.as.js.fjsx15
      set: alias-name

  alias-name:
    - match: (?xi){{commonIdentifier}}
      scope: variable.other.readwrite.js.fjsx15
      pop: true

  close-block:
    - include: ~/js/import#close-block

  delimiter:
    - match: \,
      scope: punctuation.separator.comma.js.fjsx15
      push: optional-target
    # From.
    - include: origin
    - include: else-pop

  else-pop:
    - match: (?=\S)
      pop: true

  expression:
    - include: ~/js/expression

  optional-alias:
    - match: (?=as\b)
      set: alias
    - include: else-pop

  optional-target:
    - match: (?=(?>[,}]|from))
      pop: true
    # Type.
    - include: ~/facebook-flow/type-export
    # Aliased all.
    - match: \*(?=\s*as\b)
      scope: keyword.control.import-export.star.js.fjsx15
      set: alias
    # All.
    - match: \*
      scope: keyword.control.import-export.star.js.fjsx15
      pop: true
    # Multiple targets.
    - match: \{
      scope: punctuation.section.block.begin.js.fjsx15
      set: [
        close-block,
        delimiter,
        optional-target
      ]
    # default.
    - match: default\b
      scope: keyword.control.import-export.default.js.fjsx15
      set: optional-alias
    # Aliased.
    - match: (?xi){{commonIdentifier}}(?=\s+as\b)
      scope: variable.other.readwrite.js.fjsx15
      set: alias
    # Simple.
    - match: (?xi){{commonIdentifier}}
      scope: variable.other.readwrite.js.fjsx15
      pop: true

  origin:
    - include: ~/js/import#origin

  possible-statement-or-expression:
    - match: (?=(?>[*{]|type(?:of)?))
      set: [ delimiter, optional-target ]
    # Default from.
    - match: default\b(?=\s+from\b)
      scope: keyword.control.import-export.default.js.fjsx15
      set: origin
    # Default statements and expressions.
    - match: default\b
      scope: keyword.control.import-export.default.js.fjsx15
      set: expression
    # Other statements.
    - include: ~/js/statement
    # Renamed default.
    - match: (?xi){{commonIdentifier}}
      scope: variable.other.readwrite.js.fjsx15
      set: origin
