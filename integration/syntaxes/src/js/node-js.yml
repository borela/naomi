%YAML1.2
---

# Licensed under the Apache License, Version 2.0 (the “License”); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an “AS IS” BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

variables:
  globalFunctions: |
    (?> (?>clear|set)Immediate
      | require
    )\b

  processFunctions: |
    (?> abort
      | chdir
      | cpuUsage
      | cwd
      | disconnect
      | emitWarning
      | exit
      # getegid, geteuid, getgid, getuid, getgroups
      | get(?>e[gu]id|[gu]id|groups)
      | hrtime
      | initgroups
      | kill
      | memoryUsage
      | nextTick
      | send
      # setegid, seteuid, setgid, setuid, setgroups
      | set(?>e[gu]id|[gu]id|groups)
      # umask, uptime
      | u(?>mask|ptime)
    )\b

contexts:
  main:
    - include: global-constant
    - include: global-function
    # Module property or function.
    - match: (module)\s*(\.)
      captures:
        1: support.type.object.js.fjsx15
        2: punctuation.accessor.js.fjsx15
      set: module-property-or-function
    # Proccess property or function.
    - match: (process)\s*(\.)
      captures:
        1: support.type.object.js.fjsx15
        2: punctuation.accessor.js.fjsx15
      set: process-property-or-function
    # Just the global objects.
    - match: (?>module|process)\b
      scope: support.type.object.js.fjsx15
      pop: true

  arguments:
    - include: ~/js/function-call/arguments

  else-pop:
    - match: (?=\S)
      pop: true

  function-call-meta-scope:
    - meta_scope: meta.function-call.js.fjsx15
    - include: pop-now

  global-constant:
    - match: __(?>dirname|filename)\b
      scope: support.constant.js.fjsx15
      pop: true

  global-function:
    # Function call.
    - match: (?x){{globalFunctions}}(?=\s*\()
      scope: support.function.js.fjsx15
      set: [
        function-call-meta-scope,
        arguments
      ]
    # Function reference.
    - match: (?x){{globalFunctions}}
      scope: support.function.js.fjsx15
      pop: true

  module-property-or-function:
    # Properties.
    - match: (?>default|exports|parent)\b
      scope: support.variable.js.fjsx15
      pop: true
    - include: other-property-or-function

  other-property-or-function:
    - include: ~/js/operator/other#other-property-or-function

  pop-now:
    - match: ""
      pop: true

  process-property-or-function:
    # Function call.
    - match: (?x){{processFunctions}}(?=\s*\()
      scope: support.function.js.fjsx15
      set: [
        function-call-meta-scope,
        arguments
      ]
    # Function reference.
    - match: (?x){{processFunctions}}
      scope: support.function.js.fjsx15
      pop: true
    # Properties.
    - match: |
        (?x)
        # arch, argv, argv0
        (?> ar(?>ch|gv0?)
          | channel
          | config
          | connected
          | env
          # execArgv, execPath
          | exec(?>Argv|Path)
          | exitCode
          | mainModule
          | pid
          | platform
          | release
          # stderr, stdin, stdout
          | std(?>err|in|out)
          | title
          # version, versions
          | versions?
        )\b
      scope: support.variable.js.fjsx15
      pop: true
    - include: other-property-or-function
