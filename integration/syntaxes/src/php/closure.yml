%YAML1.2
---

# Licensed under the Apache License, Version 2.0 (the “License”); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an “AS IS” BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

hidden: true

variables:
  commonIdentifier: |
    [_[:alpha:]]
    [_[:alnum:]]*

scope: ...

contexts:
  main:
    - match: |
        (?xi)
        (?=\s*\b
          (?:
            (?> private
              | protected
              | public
            )\s+
          )?
          (?:static\s+)?
          function\b
        )
      set: [
        body,
        optional-imported-variables-and-return-type-hint,
        parameters,
        keyword
      ]

  keyword:
    - match: (?i)\s*\b(function)(?!\\)\b
      captures:
        1: >-
          storage.type.php.php7
          keyword.declaration.function.php.php7
      pop: true
    - include: ~/php/modifier.no-pop

  parameters:
    - include: ~/php/function/parameters

  optional-imported-variables-and-return-type-hint:
    - match: (?=\s*(?>:|\{))
      pop: true
    - include: ~/php/function/return-type-hint
    - match: \s*(use)
      captures:
        1: >-
          storage.modifier.php.php7
          keyword.import.variable.php.php7
      set: imported-variables-begin

  imported-variables-begin:
    - match: \s*(\()
      captures:
        1: punctuation.definition.function.parameters.begin.php.php7
      set: imported-variables

  imported-variables:
    - match: \s*(\))
      captures:
        1: punctuation.definition.function.parameters.end.php.php7
      pop: true
    # Starts with a variable.
    - match: (?=\s*\$)
      push: [
        target-definition,
        target-variable,
      ]
    # Starts with a reference operator.
    - match: (?=\s*&)
      push: [
        target-definition,
        target-variable,
        reference-operator
      ]

  comment:
    - include: ~/php/comment.no-pop

  reference-operator:
    - include: comment
    - match: (?=\s*\$)
      pop: true
    - match: \s*(\&)
      captures:
        1: keyword.operator.other.reference.php.php7
      pop: true

  target-definition:
    - include: comment
    - match: (?=\s*\))
      pop: true
    - match: \s*(,)
      captures:
        1: punctuation.definition.function.parameters.php.php7
      pop: true

  target-variable:
    - include: comment
    - include: ~/php/variable

  body:
    - include: ~/php/function/body
