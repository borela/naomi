%YAML1.2
---

# Licensed under the Apache License, Version 2.0 (the “License”); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an “AS IS” BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

name: Jest Snapshot (Naomi)
scope: source.js.jest-snapshot

file_extensions:
  - js.snap

variables:
  commonIdentifier: |
    [$_[:alpha:]]
    [$_[:alnum:]]*

  myVariable:
    words:
    - foo
    - bar
    - baz

contexts:
  main:
    - match: ""
      push: [naomi, entry]

  array:
    - match: \[
      scope: punctuation.section.brackets.begin.js.jest-snapshot
      set: array-close

  array-close:
    - match: \]
      scope: punctuation.section.brackets.end.js.jest-snapshot
      pop: false
    - include: comma-no-pop
    - match: (?=\S)
      push: snapshot-content

  assignment:
    - match: \=
      scope: keyword.operator.other.assignment.js.jest-snapshot

  close-object:
    - meta_scope: meta.object-literal.js.jest-snapshot
    - match: \}
      scope: punctuation.section.block.end.js.jest-snapshot
      pop: false
    - include: comma-no-pop
    - match: (?=\S)
      push: [ key-value, key-bind, key ]

  close-snapshot:
    - match: \`
      scope: punctuation.definition.snapshot.end.js.jest-snapshot
      pop: true
    - match: (?=\S)
      push: snapshot-content

  comma-no-pop:
    - match: \,
      scope: punctuation.separator.comma.js.jest-snapshot

  entry:
    # Version.
    - match: |
        (?xi)
        //\s+Jest\s+Snapshot.*
      scope:  keyword.declaration.snapshot-version.js.jest-snapshot
    # Exports.
    - match: exports\b
      scope: support.type.object.js.jest-snapshot
      push: [ value, assignment, property-access ]
    # Terminator.
    - match: ;
      scope: punctuation.terminator.js.jest-snapshot

  key:
    - meta_scope: meta.object-literal.key.jest-snapshot
    # - include: ~/js/literal/object/property#any-key

  key-bind:
    - match: ":"
      scope: punctuation.separator.key-value.js.jest-snapshot
      pop: true

  key-value:
    # Core constants.
    - include: ~/js/core#constants
    # Other values.
    - include: snapshot-content

  js-literals:
    - include: ~/js/literal

  jsx:
    - include: ~/js

  naomi:
    - meta_scope: naomi
    - match: ""
      pop: true

  meta-jsx:
    - clear_scopes: true
    - meta_content_scope: >-
        source.jsx
        naomi
    - include: pop-now

  object:
    - match: \{
      scope: punctuation.section.block.begin.js.jest-snapshot
      set: close-object

  pop-now:
    - match: ""
      pop: true

  property-access:
    - include: ~/js/property-access

  snapshot-content:
    # Object {}
    - match: (?xi)(?={{commonIdentifier}}\s*{)
      set: [ object, type ]
    # Type[].
    - match: (?xi)(?={{commonIdentifier}}\s*\[)
      set: type-array
    # JSX.
    - match: (?xi)(?=<{{commonIdentifier}})
      set: [ meta-jsx, jsx ]
    # Other values.
    - include: js-literals

  support-type:
    - match: \[Function]
      scope: >-
        source.js.jest-snapshot
        support.type.js.jest-snapshot
      pop: true

  type:
    - match: |
        (?x)
        (?> Array
          | Object
          | Promise
        )
      scope: support.type.js.jest-snapshot
      pop: true
    - match: (?xi){{commonIdentifier}}
      scope: variable.other.type.js.jest-snapshot
      pop: true

  type-array:
    - match: ""
      set: [ array, type ]

  value:
    # Snapshot.
    - match: (`)
      captures:
        0: source.js.jest-snapshot
        1: keyword.operator.assignment.js.fjsx15
        2: punctuation.definition.snapshot.begin.js.fjsx15
      with_prototype:
        - include: support-type
      set: [ close-snapshot ]
    # Other values.
    - include: js-literals
