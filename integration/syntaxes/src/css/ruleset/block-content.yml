%YAML1.2
---

# Licensed under the Apache License, Version 2.0 (the “License”); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an “AS IS” BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

variables:
  cssIdentifier: (?!--)[_[:alpha:]\-][_[:alnum:]\-]*

  customProperty: --[_[:alnum:]\-]+

contexts:
  main:
    - include: comment-no-pop
    - match: (?=\})
      pop: true
    # Custom property.
    - match: |
        (?xi)
        (?=
          {{customProperty}}
          \s*:
        )
      set: [ possible-set, property ]
    # Grid-template.
    - match: |
        (?x)
        # grid-template, grid-template-areas, grid-template-columns,
        # grid-template-rows
        grid-template(?:-(?>areas|columns|rows))?
        (?=\s*:)
      scope: support.type.property-name.css.css3
      set: [ meta-value, optional-grid-template-value, delimiter ]
    # Grid.
    - match: |
        (?x)
        grid
        (?:-
          # grid-area
          (?> area
            # grid-auto-coolums, grid-auto-flow, grid-auto-rows
            | auto(?:-(?>columns|flow|rows))
            # grid-column, grid-column-end, grid-column-start
            | column(?:-(?>end|start))?
            # grid-gap
            | gap
            # grid-row, grid-row-end, grid-row-start
            | row(?:-(?>end|start))?
          )
        )?
        (?=\s*:)
      scope: support.type.property-name.css.css3
      set: [ meta-value, optional-grid-value, delimiter ]
    # property: value.
    - match: |
        (?xi)
        (?=
          {{cssIdentifier}}
          \s*:
        )
      set: [ meta-value, optional-value, delimiter, property ]
    # Nesting.
    - match: (?=\S)
      set:
        - include: ~/css/statement
        - include: ~/css/ruleset

  comment-no-pop:
    - include: ~/css/comment.no-pop

  delimiter:
    - include: comment-no-pop
    - match: ":"
      scope: punctuation.separator.key-value.css.css3
      pop: true

  grid-line-name:
    - match: |
        (?xi)
        {{cssIdentifier}}
      scope: variable.other.grid-line.css.css3
      pop: true

  meta-value:
    - meta_scope: meta.property-value.css.css3
    - include: pop-now

  named-grid-line-declaration:
    - meta_scope: meta.named-grid-line.css.css3
    - include: comment-no-pop
    - match: \]
      scope: punctuation.definition.bracket.end.css.css3
      pop: true
    - match: (?=\S)
      push: grid-line-name

  optional-grid-value:
    - include: comment-no-pop
    - match: (?=[`;()\]{}])
      pop: true
    - match: (?=\S)
      push:
        - include: start-end-ratio
        - include: value-separator
        - match: span\b(?!-)
          scope: keyword.operator.word.css.css3
          pop: true
        - include: grid-line-name
        - include: ~/css/value

  optional-grid-template-value:
    - include: comment-no-pop
    - match: (?=[`;()\]{}])
      pop: true
    # Named lines
    - match: \[
      scope: punctuation.definition.bracket.begin.css.css3
      push: named-grid-line-declaration
    # Other values.
    - match: (?=\S)
      push:
        - include: start-end-ratio
        - include: value-separator
        - include: ~/css/value

  optional-value:
    - include: comment-no-pop
    - match: (?=[`;()\[\]{}])
      pop: true
    - match: (?=\S)
      push:
        - include: value-separator
        - include: ~/css/value

  possible-set:
    - include: comment-no-pop
    - match: ":"
      scope: punctuation.separator.key-value.css.css3
      set: [ meta-value, set-or-optional-value ]

  pop-now:
    - match: ""
      pop: true

  property:
    - include: comment-no-pop
    - include: ~/css/property

  ruleset-block:
    - include: ~/css/ruleset/block

  start-end-ratio:
    - match: /
      scope: keyword.operator.arithmetic.ratio.css.css3
      pop: true

  set-or-optional-value:
    - include: comment-no-pop
    - match: (?=\{)
      set: ruleset-block
    - include: optional-value

  value-separator:
    - match: \,
      scope: punctuation.separator.sequence.css.css3
      pop: true
