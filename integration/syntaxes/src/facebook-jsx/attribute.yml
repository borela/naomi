%YAML1.2
---

# Licensed under the Apache License, Version 2.0 (the “License”); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an “AS IS” BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

variables:
  attributeIdentifier: |
    [_[:alpha:]]
    [_.[:alnum:]\-]*

contexts:
  main:
    - include: ~/facebook-flow/prolog
    - include: ~/js/comment/eslint
    - include: ~/js/comment/docblock
    - include: ~/js/comment/block
    - include: ~/js/comment/line
    # Embedded JS.
    - include: ~/facebook-jsx/embedded-js
    - include: dangerous
    - include: key
    - include: ref
    - include: fallback

  dangerous:
    # Attribute with value.
    - match: dangerouslySetInnerHTML\b(?=\s*=)
      scope: >-
        meta.attribute.builtin.html.jsx.jsx1
        entity.other.attribute-name.dangerous.html.jsx.jsx1
      set: [ meta, optional-value ]
    # Simple attribute.
    - match: dangerouslySetInnerHTML\b
      scope: >-
        meta.attribute.builtin.html.jsx.jsx1
        entity.other.attribute-name.dangerous.html.jsx.jsx1
      pop: true

  else-pop:
    - match: (?=\S)
      pop: true

  key:
    # Attribute with value.
    - match: key(?=\s*=)
      scope: >-
        meta.attribute.builtin.html.jsx.jsx1
        entity.other.attribute-name.key.html.jsx.jsx1
      set: [ meta, optional-value ]
    # Simple attribute.
    - match: key\b
      scope: >-
        meta.attribute.builtin.html.jsx.jsx1
        entity.other.attribute-name.key.html.jsx.jsx1
      pop: true

  optional-value:
    # Normal value.
    - match: =
      scope: punctuation.separator.key-value.html.jsx.jsx1
      set: value
    - include: else-pop

  fallback:
    # Attribute with value.
    - match: (?xi){{attributeIdentifier}}(?=\s*=)
      scope: entity.other.attribute-name.html.jsx.jsx1
      set: [ meta, optional-value ]
    # Simple attribute.
    - match: (?xi){{attributeIdentifier}}
      scope: entity.other.attribute-name.html.jsx.jsx1
      pop: true

  meta:
    - meta_scope: meta.attribute-with-value.html.html5
    - include: pop-now

  pop-now:
    - match: ""
      pop: true

  ref:
    # Attribute with value.
    - match: ref(?=\s*=)
      scope: >-
        meta.attribute.builtin.html.jsx.jsx1
        entity.other.attribute-name.ref.html.jsx.jsx1
      set: [ meta, optional-value ]
    # Simple attribute.
    - match: ref\b
      scope: >-
        meta.attribute.builtin.html.jsx.jsx1
        entity.other.attribute-name.ref.html.jsx.jsx1
      pop: true

  value:
    - include: ~/facebook-jsx/component
    - include: ~/facebook-jsx/element
    - include: ~/facebook-jsx/fragment
    - include: ~/facebook-jsx/literal/string/double-quoted
    - include: ~/facebook-jsx/literal/string/single-quoted
    - include: else-pop
