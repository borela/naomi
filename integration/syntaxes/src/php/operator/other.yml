%YAML1.2
---

# Licensed under the Apache License, Version 2.0 (the “License”); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an “AS IS” BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

variables:
  commonIdentifier: |
    [_[:alpha:]]
    [_[:alnum:]]*

  constantIdentifier: |
    [_[:upper:]]
    [_[:upper:][:digit:]]*

contexts:
  # |  Operator  |  Description        |
  # |:----------:|:--------------------|
  # |     as     |                     |
  # | instanceof |                     |
  # |     @      | Error suppression.  |
  # |     ->     | Member access.      |
  # |     =>     | Key/value.          |
  # |     ::     | Scope resolution.   |
  # |    ...     | Argument unpacking. |
  # |     ??     | Null coalescing.    |
  # |     ?      | Ternary.            |
  main:
    - match: (?xi)\s*\b(as)\b
      captures:
        1: >-
          word.php.php7
          keyword.operator.other.alias.php.php7
      pop: true
    - match: (?xi)\s*\b(instanceof)\b
      captures:
        1: >-
          word.php.php7
          keyword.operator.relational.php.php7
      pop: true
    - match: \s*(=>)
      captures:
        1: keyword.operator.other.key-value.php.php7
    - match: \s*(@)
      captures:
        1: keyword.operator.other.error.suppression.php.php7
      pop: true
    - match: \s*(\.\.\.)
      captures:
        1: keyword.operator.other.spread.php.php7
      pop: true
    - match: \s*(->)
      captures:
        1: keyword.operator.other.member-access.php.php7
      set: member-access
    - match: \s*(::)
      captures:
        1: keyword.operator.other.scope-resolution.php.php7
      set: scope-resolution
    - match: \s*(\?\?)
      captures:
        1: keyword.operator.other.php.php7
      pop: true
    - match: \s*(\?)
      captures:
        1: keyword.operator.other.ternary.js.fjsx15
      set: ternary-condition

  ternary-condition:
    - match: \s*(:)
      captures:
        1: keyword.operator.other.ternary.php.php7
      pop: true
    - match: ""
      push:
        - match: (?=\s*:)
          pop: true
        - include: ~/php/statement-and-expression

  member-access:
    - meta_content_scope: member.php.php7
    - include: ~/php/function-call/normal
    - include: ~/php/constant
    - include: ~/php/variable.no-dollar

  scope-resolution:
    - match: \s*\b(class)\b
      scope: keyword.other.php.php7
      pop: true
    - include: ~/php/function-call
    - include: ~/php/constant
    - include: ~/php/variable
