%YAML1.2
---

# Licensed under the Apache License, Version 2.0 (the “License”); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an “AS IS” BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

variables:
  octalEscapedChar: |
    [0-7]{1,3}

  hexEscapedChar: |
    x[a-f0-9]{1,2}

  unicodeEscapedChar: |
    u\{[a-f0-9]+\}

  heredocEscapeSequences: |
    \\
    (?> [\\nrtvef$]
      | {{octalEscapedChar}}
      | {{hexEscapedChar}}
      | {{unicodeEscapedChar}}
    )

  commonIdentifier: |
    [_[:alpha:]]
    [_[:alnum:]]*

  embeddedVariableStart: |
    \$

contexts:
  main:
    - match: (?xi)\s*(<<<{{commonIdentifier}})
      captures:
        1: >-
          string.unquoted.heredoc.php.php7
          punctuation.definition.string.begin.php.php7
      with_prototype:
          # HACK: This pattern is not matching the one captured when the heredoc
          # was opened, it’ll work in most cases but another solution must be
          # used.
        - match: |
            (?xi)
            ^[_[:alpha:]][_[:alnum:]]*;$
          scope: >-
            string.unquoted.heredoc.php.php7
            punctuation.definition.string.end.php.php7
          pop: true
      set: escape-a-variable-a

  escape-a-variable-a:
    - meta_content_scope: string.unquoted.heredoc.php.php7
    - match: (?x)(?=\s*{{heredocEscapeSequences}})
      set: [
        escape-b-variable-a,
        escape-a
      ]
    - match: (?x)(?=\s*{{embeddedVariableStart}})
      set: [
        escape-a-variable-b,
        variable-a
      ]

  escape-b-variable-a:
    - meta_content_scope: string.unquoted.heredoc.php.php7
    - match: (?x)(?=\s*{{heredocEscapeSequences}})
      set: [
        escape-a-variable-a,
        escape-b
      ]
    - match: (?x)(?=\s*{{embeddedVariableStart}})
      set: [
        escape-b-variable-b,
        variable-a
      ]

  escape-a-variable-b:
    - meta_content_scope: string.unquoted.heredoc.php.php7
    - match: (?x)(?=\s*{{heredocEscapeSequences}})
      set: [
        escape-b-variable-b,
        escape-a
      ]
    - match: (?x)(?=\s*{{embeddedVariableStart}})
      set: [
        escape-a-variable-a,
        variable-b
      ]

  escape-b-variable-b:
    - meta_content_scope: string.unquoted.heredoc.php.php7
    - match: (?x)(?=\s*{{heredocEscapeSequences}})
      set: [
        escape-a-variable-b,
        escape-b
      ]
    - match: (?x)(?=\s*{{embeddedVariableStart}})
      set: [
        escape-b-variable-a,
        variable-b
      ]

  escape-a:
    - match: (?x)\s*({{heredocEscapeSequences}})
      captures:
        1: constant.character.escape.a.php.php7
      pop: true

  escape-b:
    - match: (?x)\s*({{heredocEscapeSequences}})
      captures:
        1: constant.character.escape.b.php.php7
      pop: true

  variable-a:
    - meta_scope: variable.a.php.php7
    - include: ~/php/literal/string/embedded-variable

  variable-b:
    - meta_scope: variable.b.php.php7
    - include: ~/php/literal/string/embedded-variable
