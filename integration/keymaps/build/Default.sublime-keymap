// Licensed under the Apache License, Version 2.0 (the “License”); you may not
// use this file except in compliance with the License. You may obtain a copy of
// the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an “AS IS” BASIS, WITHOUT
// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
// License for the specific language governing permissions and limitations under
// the License.

////////////////////////////////////////////////////////////////////////////////
//
//  This code was auto generated, be aware that changes to this file will be
//  lost on the next build. To contribute, edit the files in:
//
//     Naomi/integration/keymaps/src
//
////////////////////////////////////////////////////////////////////////////////
[
  {
    "keys": [
      "`"
    ],
    "command": "insert_snippet",
    "args": {
      "contents": "`$0`"
    },
    "context": [
      {
        "key": "setting.auto_match_enabled",
        "operator": "equal",
        "operand": true,
        "match_all": true
      },
      {
        "key": "selection_empty",
        "operator": "equal",
        "operand": true,
        "match_all": true
      },
      {
        "key": "selector",
        "operator": "equal",
        "operand": "source.js - (string, comment)",
        "match_all": true
      }
    ]
  },
  {
    "keys": [
      "`"
    ],
    "command": "insert_snippet",
    "args": {
      "contents": "`${0:$SELECTION}`"
    },
    "context": [
      {
        "key": "setting.auto_match_enabled",
        "operator": "equal",
        "operand": true,
        "match_all": true
      },
      {
        "key": "selection_empty",
        "operator": "equal",
        "operand": false,
        "match_all": true
      },
      {
        "key": "selector",
        "operator": "equal",
        "operand": "source.js - (string, comment)",
        "match_all": true
      }
    ]
  },
  {
    "keys": [
      "$"
    ],
    "command": "insert_snippet",
    "args": {
      "contents": "\\${${0:$SELECTION}}"
    },
    "context": [
      {
        "key": "setting.auto_match_enabled",
        "operator": "equal",
        "operand": true,
        "match_all": true
      },
      {
        "key": "selection_empty",
        "operator": "equal",
        "operand": false,
        "match_all": true
      },
      {
        "key": "selector",
        "operator": "equal",
        "operand": "string.template.js",
        "match_all": true
      }
    ]
  },
  {
    "keys": [
      ">"
    ],
    "command": "naomi_close_jsx_tag",
    "context": [
      {
        "key": "setting.auto_close_tags",
        "operator": "equal",
        "operand": true,
        "match_all": true
      },
      {
        "key": "selection_empty",
        "operator": "equal",
        "operand": true,
        "match_all": true
      },
      {
        "key": "selector",
        "operator": "equal",
        "operand": "source.jsx meta.tag - (string, comment)",
        "match_all": true
      },
      {
        "key": "preceding_text",
        "operator": "not_regex_contains",
        "operand": "/\\s*$",
        "match_all": true
      }
    ]
  },
  {
    "keys": [
      "/"
    ],
    "command": "insert_snippet",
    "args": {
      "contents": "/>"
    },
    "context": [
      {
        "key": "setting.auto_close_tags",
        "operator": "equal",
        "operand": true,
        "match_all": true
      },
      {
        "key": "selection_empty",
        "operator": "equal",
        "operand": true,
        "match_all": true
      },
      {
        "key": "selector",
        "operator": "equal",
        "operand": "source.jsx meta.tag - (string, comment)",
        "match_all": true
      }
    ]
  },
  {
    "keys": [
      "."
    ],
    "command": "emmet_insert_attribute",
    "args": {
      "attribute": "className"
    },
    "context": [
      {
        "key": "setting.auto_id_class",
        "operator": "equal",
        "operand": true,
        "match_all": true
      },
      {
        "key": "selector",
        "operator": "equal",
        "operand": "source.jsx meta.tag - (comment, string, meta.embedded-js)",
        "match_all": true
      }
    ]
  },
  {
    "keys": [
      "#"
    ],
    "command": "emmet_insert_attribute",
    "args": {
      "attribute": "id"
    },
    "context": [
      {
        "key": "setting.auto_id_class",
        "operator": "equal",
        "operand": true,
        "match_all": true
      },
      {
        "key": "selector",
        "operator": "equal",
        "operand": "source.jsx meta.tag - (comment, string, meta.embedded-js)",
        "match_all": true
      }
    ]
  },
  {
    "keys": [
      "tab"
    ],
    "command": "expand_abbreviation_by_tab",
    "context": [
      {
        "key": "setting.disable_tab_abbreviations",
        "operator": "equal",
        "operand": false,
        "match_all": true
      },
      {
        "key": "selection_empty",
        "operator": "equal",
        "operand": true,
        "match_all": true
      },
      {
        "key": "auto_complete_visible",
        "operator": "equal",
        "operand": false,
        "match_all": true
      },
      {
        "key": "selector",
        "operator": "equal",
        "operand": "source.jsx - (comment, string)",
        "match_all": true
      }
    ]
  },
  {
    "keys": [
      "/"
    ],
    "command": "close_tag",
    "context": [
      {
        "key": "setting.auto_close_tags",
        "operator": "equal",
        "operand": true,
        "match_all": true
      },
      {
        "key": "selector",
        "operator": "equal",
        "operand": "(text.html, text.xml, source.jsx) - (string, comment)",
        "match_all": true
      },
      {
        "key": "preceding_text",
        "operator": "regex_match",
        "operand": ".*?<$",
        "match_all": true
      }
    ]
  },
  {
    "keys": [
      "backspace"
    ],
    "command": "run_macro_file",
    "args": {
      "file": "res://Packages/Default/Delete Left Right.sublime-macro"
    },
    "context": [
      {
        "key": "setting.auto_match_enabled",
        "operator": "equal",
        "operand": true,
        "match_all": true
      },
      {
        "key": "selection_empty",
        "operator": "equal",
        "operand": true,
        "match_all": true
      },
      {
        "key": "selector",
        "operator": "equal",
        "operand": "string.template.js",
        "match_all": true
      },
      {
        "key": "preceding_text",
        "operator": "regex_contains",
        "operand": "`$",
        "match_all": true
      },
      {
        "key": "following_text",
        "operator": "regex_contains",
        "operand": "^`",
        "match_all": true
      }
    ]
  },
  {
    "keys": [
      "enter"
    ],
    "command": "run_macro_file",
    "args": {
      "file": "res://Packages/Default/Add Line in Braces.sublime-macro"
    },
    "context": [
      {
        "key": "setting.auto_indent",
        "operator": "equal",
        "operand": true,
        "match_all": true
      },
      {
        "key": "selection_empty",
        "operator": "equal",
        "operand": true,
        "match_all": true
      },
      {
        "key": "preceding_text",
        "operator": "regex_contains",
        "operand": "`$",
        "match_all": true
      },
      {
        "key": "following_text",
        "operator": "regex_contains",
        "operand": "^`",
        "match_all": true
      }
    ]
  },
  {
    "keys": [
      "enter"
    ],
    "command": "naomi_run_commands",
    "args": {
      "commands": [
        {
          "command": "insert",
          "args": {
            "characters": "\n\n"
          }
        },
        {
          "command": "move",
          "args": {
            "by": "lines",
            "forward": false
          }
        },
        {
          "command": "move_to",
          "args": {
            "to": "hardeol",
            "forward": false
          }
        },
        {
          "command": "reindent",
          "args": {
            "single_line": true
          }
        }
      ]
    },
    "context": [
      {
        "key": "setting.auto_indent",
        "operator": "equal",
        "operand": true,
        "match_all": true
      },
      {
        "key": "selection_empty",
        "operator": "equal",
        "operand": true,
        "match_all": true
      },
      {
        "key": "preceding_text",
        "operator": "regex_contains",
        "operand": "\\($",
        "match_all": true
      },
      {
        "key": "following_text",
        "operator": "regex_contains",
        "operand": "^\\)",
        "match_all": true
      }
    ]
  },
  {
    "keys": [
      "enter"
    ],
    "command": "run_macro_file",
    "args": {
      "file": "res://Packages/Default/Add Line in Braces.sublime-macro"
    },
    "context": [
      {
        "key": "setting.auto_indent",
        "operator": "equal",
        "operand": true,
        "match_all": true
      },
      {
        "key": "selection_empty",
        "operator": "equal",
        "operand": true,
        "match_all": true
      },
      {
        "key": "preceding_text",
        "operator": "regex_contains",
        "operand": "\\[$",
        "match_all": true
      },
      {
        "key": "following_text",
        "operator": "regex_contains",
        "operand": "^\\]",
        "match_all": true
      }
    ]
  }
]