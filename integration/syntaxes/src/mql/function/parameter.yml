%YAML1.2
---

# Licensed under the Apache License, Version 2.0 (the “License”); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an “AS IS” BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

variables:
  commonIdentifier: |
    [_[:alpha:]]
    [_[:alnum:]]*

  typeIdentifier: |
    {{commonIdentifier}}
    (?:\s*<.*?>\s+)?
    (?:\s*\**)?

contexts:
  main:
    - match: |
        (?xi)
        (?=\s*
          (?:const)?
          {{typeIdentifier}}
        )
      set: [
        parameter,
        type
      ]

  type:
    - match: \s*(const)
      captures:
        1: >-
          storage.type.mql.mql4
          keyword.declaration.const.mql.mql4
    - include: ~/mql/type

  parameter:
    - include: comment-no-pop
    # End of parameter.
    - match: |
        (?x)
        (?=\s*
          (?> ,
            | \)
          )
        )
      pop: true
    # Reference.
    - match: \s*(&)
      captures:
        1: >-
          storage.modifier.mql.mql4
          keyword.operator.other.reference.mql.mql4
    # Array indicator.
    - match: \s*(\[)
      captures:
        1: punctuation.definition.array.begin.mql.mql4
      push: array
    # Default value.
    - match: \s*(=)
      captures:
        1: keyword.operator.other.assignment.mql.mql4
      set: value
    # Identifier.
    - match: |
        (?xi)
        (?=\s*{{commonIdentifier}})
      push: identifier

  identifier:
    - meta_scope: function.parameter.mql.mql4
    - include: ~/mql/constant
    - include: ~/mql/variable

  array:
    - match: \s*(])
      captures:
        1: punctuation.definition.array.end.mql.mql4
      pop: true
    - match: ""
      push:
        - include: statement-and-expression

  value:
    - match: |
        (?x)
        (?=\s*
          (?> ,
            | \)
          )
        )
      pop: true
    - match: ""
      push:
        - include: statement-and-expression
        - match: ""
          pop: true

  comment-no-pop:
    - include: ~/mql/comment.no-pop

  statement-and-expression:
    - include: ~/mql/statement-and-expression
