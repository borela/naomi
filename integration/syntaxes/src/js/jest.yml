%YAML1.2
---

# Licensed under the Apache License, Version 2.0 (the “License”); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an “AS IS” BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

contexts:
  main:
    # jest.
    - match: (jest)\s*(\.)
      captures:
        1: support.type.object.jest.js.fjsx15
        2: punctuation.accessor.js.fjsx15
      set: jest-property-or-function
    # afterAll/Each, beforeAll/Each, describe, it, test.
    - match: |
        (?x)
        (?> after(?>All|Each)
          | before(?>All|Each)
          | describe
          | it
          | test
        )\b
        (?=
          (?> \.(?>each|only|skip)
            | \s*\(
          )
        )
      scope: support.function.jest.fn.js.fjsx15
      set: [
        meta-scope,
        arguments,
        optional-each-skip-only
      ]
    # expect
    - match: expect\b
      scope: support.function.jest.js.fjsx15
      set: expect-chain

  accessor-no-pop:
    - match: \.
      scope: punctuation.accessor.js.fjsx15

  arguments:
    - include: ~/js/function-call/arguments

  else-pop:
    - match: (?=\S)
      pop: true

  expect-chain:
    - include: accessor-no-pop
    # Expect arguments.
    - match: (?=\s*\()
      push: [
        meta-scope,
        arguments
      ]
    # Other.
    - match: (?>not|resolves|rejects)\b
      scope: support.type.object.jest.matcher.other.js.fjsx15
    # Matchers.
    - match: |
        (?x)
        to
        (?> Be
            (?> Called
              | CloseTo
              | Defined
              | Falsy
              | GreaterThan(?:OrEqual)?
              | InstanceOf
              | LessThan(?:OrEqual)?
              | Null
              | Truthy
              | Undefined
            )?
          | Contain(?:Equal)?
          | Equal
          | Have
            (?> Been
                (?> Called(?>Times|With)?
                  | LastCalledWith
                  | NthCalledWith
                )
              | LastReturnedWith
              | NthReturnedWith
              | Returned(?>Times|With)?
            )
          | Have(?>Length|Property)
          | Match(?:Object|(?:Inline)?Snapshot)?
          | StrictEqual
          | Throw(?:Error(?:Matching(?:Inline)?Snapshot)?)?
        )\b
        (?=\s*\()
      scope: support.function.jest.matcher.fjsx15
      set: [
        matcher-meta-scope,
        arguments
      ]
    # Other.
    - match: |
        (?x)
        (?> addSnapshotSerializer
          | any(?:thing)?
          | array(?:Containing)?
          | assertions
          | extend
          | hasAssertions
          | objectContaining
          | string(?>Containing|Matching)
        )\b
        (?=\s*\()
      scope: support.function.jest.matcher.fjsx15
      set: [
        meta-scope,
        arguments
      ]
    - include: else-pop

  jest-property-or-function:
    - match:
        - words:
            - clearAllTimers
            - disableAutomock
            - enableAutomock
            - fn
            - isMockFunction
            - genMockFromModule
            - mock
            - unmock
            - doMock
            - dontMock
            - clearAllMocks
            - resetAllMocks
            - restoreAllMocks
            - resetModules
            - runAllTicks
            - runAllTimers
            - advanceTimersByTime
            - runOnlyPendingTimers
            - setMock
            - setTimeout
            - useFakeTimers
            - useRealTimers
            - spyOn
        - (?=\s*\()
      scope: support.function.jest.js.fjsx15
      set: [
        meta-scope,
        arguments
      ]
    - include: else-pop

  matcher-meta-scope:
    - meta_scope: meta.function-call.jest.matcher.js.fjsx15
    - include: pop-now

  meta-scope:
    - meta_scope: meta.function-call.jest.js.fjsx15
    - include: pop-now

  optional-each-skip-only:
    - include: accessor-no-pop
    # each
    - match: each\b
      scope: support.function.jest.each.js.fjsx15
      pop: true
    # only
    - match: only\b
      scope: support.function.jest.only.js.fjsx15
      pop: true
    # skip
    - match: skip\b
      scope: support.function.jest.skip.js.fjsx15
      pop: true
    - include: else-pop

  pop-now:
    - match: ""
      pop: true
